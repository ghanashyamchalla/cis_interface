# AppVeyor.com is a Continuous Integration service to build and run tests under
# Windows

# branches to build
branches:
  except:
    - gh-pages

os: Visual Studio 2015

#---------------------------------#
#    environment configuration    #
#---------------------------------#

environment:

  PYPI_PASSWORD:
    secure: vixzjLjh1xT6my9x65rOcw==

  global:
    PYTHON: "C:\\Miniconda3-x64"
    APPVEYOR_SAVE_CACHE_ON_ERROR: true
    NUMPY: numpy
    MATPLOTLIB: matplotlib
    MPLBACKEND: agg
    JSONSCHEMA: jsonschema
    INSTALLZMQ: 1
    INSTALLRMQ: 0
    INSTALLAPY: 0
    INSTALLLPY: 0
    INSTALLR: 1
    INSTALLC: 1
    BUILDDOCS: 0
    YGG_CONDA: 1
    YGG_TEST_FLAGS:

  erlang_download_url: "http://erlang.org/download/otp_win64_20.2.exe"
  erlang_exe_path: "C:\\Users\\appveyor\\erlang.exe"
  erlang_home_dir: "C:\\Users\\appveyor\\erlang"

  rabbitmq_installer_download_url: "https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.7.3/rabbitmq-server-3.7.3.exe"
  rabbitmq_installer_path: "C:\\Users\\appveyor\\rabbitmq-server-3.7.3.exe"

  matrix:
    - platform: x64
      PYTHON_VERSION: "3.6"
      YGG_TEST_FLAGS: "--test-suite=examples_part1"
    - platform: x64
      PYTHON_VERSION: "3.6"
      YGG_TEST_FLAGS: "--test-suite=examples_part2"
    - platform: x64
      PYTHON_VERSION: "3.6"
      YGG_TEST_FLAGS: "--long-running"
    - platform: x64
      PYTHON_VERSION: "3.7"
      INSTALLZMQ: 0
      YGG_TEST_FLAGS: "--long-running"
    - platform: x64
      PYTHON_VERSION: "3.6"
      YGG_TEST_FLAGS: "--test-suite=types tests/test_config.py drivers/tests/test_CompiledModelDriver.py"
      INSTALLC: 0  # Acts to exclude c and cpp
    - platform: x64
      PYTHON_VERSION: "3.7"
      YGG_TEST_FLAGS: "--test-suite=types --languages c cpp"

install:
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - "git submodule update --init --recursive"

  # Set CZMQ/ZMQ install paths for use in install-czmq-windows.bat
  - "if %INSTALLZMQ% == 1 SET ZMQINSTALLDIR=%APPVEYOR_BUILD_FOLDER%"
  - "if %INSTALLZMQ% == 1 SET CONFIGURATION=Debug"
  - "if %INSTALLZMQ% == 1 SET ZEROMQ_LIBRARY_DIR=%ZMQINSTALLDIR%\\build_libzmq\\lib\\%CONFIGURATION%"
  - "if %INSTALLZMQ% == 1 SET CZMQ_LIBRARY_DIR=%ZMQINSTALLDIR%\\build_czmq\\%CONFIGURATION%"
  - "if %INSTALLZMQ% == 1 SET ZEROMQ_INCLUDE_DIR=%ZMQINSTALLDIR%\\build_libzmq\\include"
  - "if %INSTALLZMQ% == 1 SET CZMQ_INCLUDE_DIR=%ZMQINSTALLDIR%\\czmq\\include"
  - "if %INSTALLZMQ% == 1 SET PATH=%PATH%;%ZEROMQ_LIBRARY_DIR%;%CZMQ_LIBRARY_DIR%;%ZEROMQ_INCLUDE_DIR%;%CZMQ_INCLUDE_DIR%"
  - "if %INSTALLZMQ% == 1 echo PATH = %PATH%"

  # Install R tools
  - ps: If ($env:INSTALLR -eq 1) {
      (new-object net.webclient).DownloadFile(
        "https://cran.rstudio.com/bin/windows/Rtools/Rtools35.exe",
        "C:\projects\rtools.exe")
      }
  - if "%INSTALLR%" == "1" C:\projects\rtools.exe /VERYSILENT /DIR=C:\Rtools
  - if "%INSTALLR%" == "1" set PATH=c:\Rtools\bin;%PATH%

  # Install & start RabbitMQ
  - ps: If ($env:INSTALLRMQ -eq 1) { $webclient=New-Object System.Net.WebClient }
  - if "%INSTALLRMQ%" == "1" ECHO Downloading Erlang...
  - ps: If ($env:INSTALLRMQ -eq 1) { $webclient.DownloadFile("$env:erlang_download_url", "$env:erlang_exe_path") }
  - if "%INSTALLRMQ%" == "1" ECHO Starting Erlang...
  - if "%INSTALLRMQ%" == "1" start /B /WAIT %erlang_exe_path% /S /D=%erlang_home_dir%
  - if "%INSTALLRMQ%" == "1" set ERLANG_HOME=%erlang_home_dir%
  - if "%INSTALLRMQ%" == "1" ECHO Downloading RabbitMQ...
  - ps: If ($env:INSTALLRMQ -eq 1) { $webclient.DownloadFile("$env:rabbitmq_installer_download_url", "$env:rabbitmq_installer_path") }
  - if "%INSTALLRMQ%" == "1" ECHO Installing and starting RabbitMQ with default config...
  - if "%INSTALLRMQ%" == "1" start /B /WAIT %rabbitmq_installer_path% /S
  - ps: If ($env:INSTALLRMQ -eq 1) { (Get-Service -Name RabbitMQ).Status }

  # Setup environment
  # Currently conda is used reguardless of the installation method as
  # that is how python is installed by appveyor
  - "python utils\\ci_setup.py pip env %PYTHON_VERSION%"
  # - if "%YGG_CONDA%" == "1" "python utils\\ci_setup.py conda env %PYTHON_VERSION%"
  # - if "%YGG_CONDA%" == "0" "python utils\\ci_setup.py pip env %PYTHON_VERSION%"

  # Activate environment (should be conda reguardless)
  - "activate test-environment"
  
  # Setup Visual C++ toolset
  - if "%INSTALLC%" == "1" call "ci\\install-compilers.bat"

  # Build and install
  - "python utils\\ci_setup.py pip deploy"
  # - if "%YGG_CONDA%" == "1" "python utils\\ci_setup.py conda deploy"
  # - if "%YGG_CONDA%" == "0" "python utils\\ci_setup.py pip deploy"
  - "echo %PATH%"

cache:
  - '%LOCALAPPDATA%\pip\Cache -> setup.py'
  - 'C:\Users\appveyor\.yggdrasil.cfg -> setup.py'
  - libsodium    -> ci\install-czmq_windows.bat
  - libzmq       -> ci\install-czmq_windows.bat
  - build_libzmq -> ci\install-czmq_windows.bat
  - czmq         -> ci\install-czmq_windows.bat
  - build_czmq   -> ci\install-czmq_windows.bat

# Not a .NET project
build: false

test_script:
  - "yggtest --ci %YGG_TEST_FLAGS%"

after_test:
  - "codecov"

# Deploy to PyPI
# on_success:
#   - echo "Starting Artifact Deployment"
#   - "pip install twine"
#   - "python setup.py bdist_wheel"

#   # Specify account details for PyPI
#   - echo [distutils]                                  > %USERPROFILE%\\.pypirc
#   - echo index-servers =                             >> %USERPROFILE%\\.pypirc
#   - echo     pypi                                    >> %USERPROFILE%\\.pypirc
#   - echo [pypi]                                      >> %USERPROFILE%\\.pypirc
#   - echo username=langmm                             >> %USERPROFILE%\\.pypirc
#   - echo password=%PYPI_PASSWORD%                    >> %USERPROFILE%\\.pypirc

#   # Workaround required to ensure setup.py finds the .pypirc under Windows
#   - set HOME=%USERPROFILE%

#   # Deploy wheel on tags
#   - ps: If ($env:APPVEYOR_REPO_TAG -eq "true" -And $env:APPVEYOR_REPO_BRANCH -eq "master") { Invoke-Expression "twine upload --skip-existing dist/*" 2>$null } Else { write-output "Not on a tag on master, won't deploy to pypi"}
#   # - if "%APPVEYOR_REPO_TAG%"=="true" ( python setup.py bdist_wheel upload ) else ( echo "Not deploying because not a tagged commit." )
