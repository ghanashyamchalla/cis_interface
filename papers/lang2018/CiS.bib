Automatically generated by Mendeley Desktop 1.19.2
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Preferences -> BibTeX in Mendeley Desktop

@article{Ooms2014,
abstract = {A naive realization of JSON data in R maps JSON arrays to an unnamed list, and JSON objects to a named list. However, in practice a list is an awkward, inefficient type to store and manipulate data. Most statistical applications work with (homogeneous) vectors, matrices or data frames. Therefore JSON packages in R typically define certain special cases of JSON structures which map to simpler R types. Currently there exist no formal guidelines, or even consensus between implementations on how R data should be represented in JSON. Furthermore, upon closer inspection, even the most basic data structures in R actually do not perfectly map to their JSON counterparts and leave some ambiguity for edge cases. These problems have resulted in different behavior between implementations and can lead to unexpected output. This paper explicitly describes a mapping between R classes and JSON data, highlights potential problems, and proposes conventions that generalize the mapping to cover all common structures. We emphasize the importance of type consistency when using JSON to exchange dynamic data, and illustrate using examples and anecdotes. The jsonlite R package is used throughout the paper as a reference implementation.},
archivePrefix = {arXiv},
arxivId = {1403.2805},
author = {Ooms, Jeroen},
eprint = {1403.2805},
month = {mar},
title = {{The jsonlite Package: A Practical and Consistent Mapping Between JSON Data and R Objects}},
url = {http://arxiv.org/abs/1403.2805},
year = {2014}
}
@misc{RMQ,
publisher = {Pivotal Software, Inc.},
title = {{RabbitMQ}},
url = {https://www.rabbitmq.com/},
urldate = {2018-09-30},
year = {2007}
}
@misc{Levin2019,
author = {Levin, Joseph A. and Croucher, Adrian},
title = {{Fortran 95 JSON Parser}},
url = {https://github.com/josephalevin/fson},
urldate = {2019-01-05},
year = {2019}
}
@techreport{Ben-Kiki2009,
abstract = {Latest (patched) version: HTML: http://yaml.org/spec/1.2/spec.html PDF: http://yaml.org/spec/1.2/spec.pdf PS: http://yaml.org/spec/1.2/spec.ps Errata: http://yaml.org/spec/1.2/errata.html Previous (original) version: http://yaml.org/spec/1. Status of this Document This document reflects the third version of YAML data serialization language. The content of the specification was arrived at by consensus of its authors and through user feedback on the yaml-core mailing list. We encourage implementers to please update their software with support for this version. The primary objective of this revision is to bring YAML into compliance with JSON as an official subset. YAML 1.2 is compatible with 1.1 for most practical applications-this is a minor revision. An expected source of incompatibility with prior versions of YAML, especially the syck implementation, is the change in implicit typing rules. We have removed unique implicit typing rules and have updated these rules to align them with JSON's productions. In this version of YAML, boolean values may be serialized as "true" or "false"; the empty scalar as "null". Unquoted numeric values are a superset of JSON's numeric production. Other changes in the specification were the removal of the Unicode line breaks and production bug fixes. We also define 3 built-in implicit typing rule sets: untyped, strict JSON, and a more flexible YAML rule set that extends JSON typing. The difference between late 1.0 drafts which syck 0.55 implements and the 1.1 revision of this specification is much more extensive. We fixed usability issues with the tagging syntax. In particular, the single exclamation was redefined for private types and a simple prefixing mechanism was introduced. This revision also fixed many production edge cases and introduced a type repository. Therefore, there are several incompatibilities between syck and this revision as well. The list of known errors in this specification is available at http://yaml.org/spec/1.2/errata.html. Please report errors in this document to the yaml-core mailing list. This revision contains fixes for all errors known as of 2009-10-01. We wish to thank implementers who have tirelessly tracked earlier versions of this specification, and our fabulous user community whose feedback has both validated and clarified our direction. Abstract YAML™ (rhymes with "camel") is a human-friendly, cross language, Unicode based data serialization language designed around the common native data types of agile programming languages. It is broadly useful for programming needs ranging from configuration files to Internet messaging to object persistence to data auditing. Together with the Unicode standard for characters, this specification provides all the information necessary to understand YAML Version 1.2 and to create programs that process YAML information. This document may be freely copied, provided it is not modified.},
author = {Ben-Kiki, Oren and Evans, Clark and d{\"{o}}t Net, Ingy},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Ben-Kiki, Evans, d{\"{o}}t Net - 2009 - YAML Ain't Markup Language (YAML™) Version 1.2 YAML Ain't Markup Language (YAML™) Version 1.2 3 r.pdf:pdf},
title = {{YAML Ain't Markup Language (YAML™) Version 1.2 YAML Ain't Markup Language (YAML™) Version 1.2 3 rd Edition, Patched at 2009-10-01}},
url = {http://yaml.org/spec/1.2/spec.html},
year = {2009}
}
@article{ZHU2013,
author = {Zhu, Xin-Guang and Wang, Yu and Ort, Donald R. and Long, Stephen P.},
doi = {10.1111/pce.12025},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/ZHU et al. - 2013 - iei -photosynthesis a comprehensive dynamic mechanistic model of C3 photosynthesis from light capture to sucrose syn.pdf:pdf},
issn = {01407791},
journal = {Plant. Cell Environ.},
keywords = {ATPase,Rubisco,Rubisco activase,chlorophyll fluorescence quenching,cytochrome b6f,phenomics,photoprotection,photorespiration,systems biology,thioredoxin},
month = {sep},
number = {9},
pages = {1711--1727},
publisher = {John Wiley {\&} Sons, Ltd (10.1111)},
title = {{e -photosynthesis: a comprehensive dynamic mechanistic model of C3 photosynthesis: from light capture to sucrose synthesis}},
url = {http://doi.wiley.com/10.1111/pce.12025},
volume = {36},
year = {2013}
}
@article{Song2013,
abstract = {{\textless}p{\textgreater}Canopy architecture has been a major target in crop breeding for improved yields. Whether crop architectures in current elite crop cultivars can be modified for increased canopy CO2 uptake rate (Ac) under elevated atmospheric CO2 concentrations (Ca) is currently unknown. To study this question, we developed a new model of canopy photosynthesis, which includes three components: (i) a canopy architectural model; (ii) a forward ray tracing algorithm; and (iii) a steady-state biochemical model of C3 photosynthesis. With this model, we demonstrated that the Ac estimated from ‘average' canopy light conditions is {\~{}}25{\%} higher than that from light conditions at individual points in the canopy. We also evaluated theoretically the influence of canopy architectural on Ac under current and future Ca in rice. Simulation results suggest that to gain an optimal Ac for the examined rice cultivar, the stem height, leaf width and leaf angles can be manipulated to enhance canopy photosynthesis. This model provides a framework for designing ideal crop architectures to gain optimal Ac under future changing climate conditions. A close linkage between canopy photosynthesis modelling and canopy photosynthesis measurements is required to fully realise the potential of such modelling approaches in guiding crop improvements.{\textless}/p{\textgreater}},
author = {Song, Qingfeng and Zhang, Guilian and Zhu, Xin-Guang},
doi = {10.1071/FP12056},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Song, Zhang, Zhu - 2013 - Optimal crop canopy architecture to maximise canopy photosynthetic CO2 uptake under elevated CO2 – a theoret.pdf:pdf},
issn = {1445-4408},
journal = {Funct. Plant Biol.},
keywords = {canopy architecture,elevated CO2,photosynthesis,ray tracing,sunlit–shaded model.},
month = {mar},
number = {2},
pages = {108},
publisher = {CSIRO PUBLISHING},
title = {{Optimal crop canopy architecture to maximise canopy photosynthetic CO2 uptake under elevated CO2 – a theoretical study using a mechanistic model of canopy photosynthesis}},
url = {http://www.publish.csiro.au/?paper=FP12056},
volume = {40},
year = {2013}
}
@article{Pradal2009,
abstract = {In this paper, we present PlantGL, an open-source graphic toolkit for the creation, simulation and analysis of 3D virtual plants. This C++ geometric library is embedded in the Python language which makes it a powerful user-interactive platform for plant modeling in various biological application domains. PlantGL makes it possible to build and manipulate geometric models of plants or plant parts, ranging from tissues and organs to plant populations. Based on a scene graph augmented with primitives dedicated to plant representation, several methods are provided to create plant architectures from either field measurements or procedural algorithms. Because they are particularly useful in plant design and analysis, special attention has been paid to the definition and use of branching system envelopes. Several examples from different modelling applications illustrate how PlantGL can be used to construct, analyse or manipulate geometric models at different scales ranging from tissues to plant communities.},
author = {Pradal, C. and Boudon, F. and Nouguier, C. and Chopard, J. and Godin, C.},
doi = {10.1016/J.GMOD.2008.10.001},
issn = {1524-0703},
journal = {Graph. Models},
month = {jan},
number = {1},
pages = {1--21},
publisher = {Academic Press},
title = {{PlantGL: A Python-based geometric library for 3D plant modelling at different scales}},
url = {https://www.sciencedirect.com/science/article/pii/S1524070308000143},
volume = {71},
year = {2009}
}
@article{Pradal2008,
abstract = {{\textless}p{\textgreater}The development of functional–structural plant models requires an increasing amount of computer modelling. All these models are developed by different teams in various contexts and with different goals. Efficient and flexible computational frameworks are required to augment the interaction between these models, their reusability, and the possibility to compare them on identical datasets. In this paper, we present an open-source platform, OpenAlea, that provides a user-friendly environment for modellers, and advanced deployment methods. OpenAlea allows researchers to build models using a visual programming interface and provides a set of tools and models dedicated to plant modelling. Models and algorithms are embedded in OpenAlea ‘components' with well defined input and output interfaces that can be easily interconnected to form more complex models and define more macroscopic components. The system architecture is based on the use of a general purpose, high-level, object-oriented script language, Python, widely used in other scientific areas. We present a brief rationale that underlies the architectural design of this system and we illustrate the use of the platform to assemble several heterogeneous model components and to rapidly prototype a complex modelling scenario.{\textless}/p{\textgreater}},
author = {Pradal, Christophe and Dufour-Kowalski, Samuel and Boudon, Fr{\'{e}}d{\'{e}}ric and Fournier, Christian and Godin, Christophe},
doi = {10.1071/FP08084},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Pradal et al. - 2008 - OpenAlea a visual programming and component-based software platform for plant modelling.pdf:pdf},
issn = {1445-4408},
journal = {Funct. Plant Biol.},
keywords = {dataflow,interactive modelling,light interception,plant modeling,software architecture.},
month = {dec},
number = {10},
pages = {751},
publisher = {CSIRO PUBLISHING},
title = {{OpenAlea: a visual programming and component-based software platform for plant modelling}},
url = {http://www.publish.csiro.au/?paper=FP08084},
volume = {35},
year = {2008}
}
@article{Meurer2017,
abstract = {{\textless}p{\textgreater}SymPy is an open source computer algebra system written in pure Python. It is built with a focus on extensibility and ease of use, through both interactive and programmatic applications. These characteristics have led SymPy to become a popular symbolic library for the scientific Python ecosystem. This paper presents the architecture of SymPy, a description of its features, and a discussion of select submodules. The supplementary material provide additional examples and further outline details of the architecture and features of SymPy.{\textless}/p{\textgreater}},
author = {Meurer, Aaron and Smith, Christopher P. and Paprocki, Mateusz and {\v{C}}ert{\'{i}}k, Ondřej and Kirpichev, Sergey B. and Rocklin, Matthew and Kumar, AMiT and Ivanov, Sergiu and Moore, Jason K. and Singh, Sartaj and Rathnayake, Thilina and Vig, Sean and Granger, Brian E. and Muller, Richard P. and Bonazzi, Francesco and Gupta, Harsh and Vats, Shivam and Johansson, Fredrik and Pedregosa, Fabian and Curry, Matthew J. and Terrel, Andy R. and Rou{\v{c}}ka, {\v{S}}t{\v{e}}p{\'{a}}n and Saboo, Ashutosh and Fernando, Isuru and Kulal, Sumith and Cimrman, Robert and Scopatz, Anthony},
doi = {10.7717/peerj-cs.103},
issn = {2376-5992},
journal = {PeerJ Comput. Sci.},
month = {jan},
pages = {e103},
title = {{SymPy: symbolic computing in Python}},
url = {https://peerj.com/articles/cs-103},
volume = {3},
year = {2017}
}
@misc{celery,
title = {{Celery}},
url = {https://github.com/celery/celery},
year = {2018}
}
@article{WANG2015,
author = {Wang, Dan and Jaiswal, Deepak and Lebauer, David S. and Wertin, Timothy M. and Bollero, German A. and Leakey, Andrew D. B. and Long, Stephen P.},
doi = {10.1111/pce.12556},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/WANG et al. - 2015 - A physiological and biophysical model of coppice willow ( iSi ialixi spp.) production yields for the contiguous USA.pdf:pdf},
issn = {01407791},
journal = {Plant. Cell Environ.},
keywords = {BioCro,WIMOVAC,bioenergy,climate change,crop models,modeling,photosynthesis,poplar},
month = {sep},
number = {9},
pages = {1850--1865},
publisher = {John Wiley {\&} Sons, Ltd (10.1111)},
title = {{A physiological and biophysical model of coppice willow ( S alix spp.) production yields for the contiguous USA in current and future climate scenarios}},
url = {http://doi.wiley.com/10.1111/pce.12556},
volume = {38},
year = {2015}
}
@article{Farquhar1980,
abstract = {Various aspects of the biochemistry of photosynthetic carbon assimilation in C3 plants are integrated into a form compatible with studies of gas exchange in leaves. These aspects include the kinetic properties of ribulose bisphosphate carboxylase-oxygenase; the requirements of the photosynthetic carbon reduction and photorespiratory carbon oxidation cycles for reduced pyridine nucleotides; the dependence of electron transport on photon flux and the presence of a temperature dependent upper limit to electron transport. The measurements of gas exchange with which the model outputs may be compared include those of the temperature and partial pressure of CO2(p(CO2)) dependencies of quantum yield, the variation of compensation point with temperature and partial pressure of O2(p(O2)), the dependence of net CO2 assimilation rate on p(CO2) and irradiance, and the influence of p(CO2) and irradiance on the temperature dependence of assimilation rate.},
author = {Farquhar, G. D. and von Caemmerer, S. and Berry, J. A.},
doi = {10.1007/BF00386231},
issn = {0032-0935},
journal = {Planta},
month = {jun},
number = {1},
pages = {78--90},
pmid = {24306196},
title = {{A biochemical model of photosynthetic CO2 assimilation in leaves of C3 species}},
url = {http://www.ncbi.nlm.nih.gov/pubmed/24306196 http://link.springer.com/10.1007/BF00386231},
volume = {149},
year = {1980}
}
@article{BUCKLEY2013,
abstract = {Stomata are an attractive system for modellers for many reasons, and the literature contains a large number of papers describing models that predict stomatal conductance as a function of environmental factors. The approaches and goals of these models vary considerably. This review summarizes these different approaches and discusses their strengths and weaknesses with a focus on mechanistically based models. The critical unresolved questions are highlighted and placed in the context of current research on stomatal physiology. Finally, directions for future research are considered.},
author = {Buckley, Thomas N. and Mott, Keith A.},
doi = {10.1111/pce.12140},
issn = {01407791},
journal = {Plant. Cell Environ.},
keywords = {ABA,CO2,humidity,light,temperature},
month = {sep},
number = {9},
pages = {1691--1699},
pmid = {23730938},
title = {{Modelling stomatal conductance in response to environmental factors}},
url = {http://www.ncbi.nlm.nih.gov/pubmed/23730938 http://doi.wiley.com/10.1111/pce.12140},
volume = {36},
year = {2013}
}
@misc{luigi,
title = {{Luigi}},
url = {https://github.com/spotify/luigi},
year = {2018}
}
@article{Kappas2013,
author = {Kappas, M. and Degener, J. and Bauboeck, R.},
journal = {Am. Geophys. Union, Fall Meet. 2013, Abstr. id. GC33A-1088},
keywords = {1600 GLOBAL CHANGE},
title = {{BioSTAR, a New Biomass and Yield Modeling Software}},
url = {http://adsabs.harvard.edu/abs/2013AGUFMGC33A1088K},
year = {2013}
}
@article{Sharkey2016,
author = {Sharkey, Thomas D.},
doi = {10.1111/pce.12641},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Sharkey - 2016 - What gas exchange data can tell us about photosynthesis.pdf:pdf},
issn = {01407791},
journal = {Plant. Cell Environ.},
month = {jun},
number = {6},
pages = {1161--1163},
publisher = {John Wiley {\&} Sons, Ltd (10.1111)},
title = {{What gas exchange data can tell us about photosynthesis}},
url = {http://doi.wiley.com/10.1111/pce.12641},
volume = {39},
year = {2016}
}
@inproceedings{Pradal2015,
abstract = {Analyzing biological data (e.g., annotating genomes, assembling NGS data...) may involve very complex and inter-linked steps where several tools are combined together. Scientific workflow systems have reached a level of maturity that makes them able to support the design and execution of such in-silico experiments, and thus making them increasingly popular in the bioinformatics community. However, in some emerging application domains such as system biology, developmental biology or ecology, the need for data analysis is combined with the need to model complex multi-scale biological systems, possibly involving multiple simulation steps. This requires the scientific work-flow to deal with retro-action to understand and predict the relationships between structure and function of these complex systems. OpenAlea (openalea.gforge.inria.fr) is the only scientific workflow system able to uniformly address the problem, which made it successful in the scientific community. One of its main originality is to introduce higher-order dataflows as a means to uniformly combine classical data analysis with modeling and simulation. In this demonstration paper, we provide for the first time the description of the OpenAlea system involving an original combination of features. We illustrate the demonstration on a high-throughput workflow in phenotyping, phenomics, and environmental control designed to study the interplay between plant architecture and climatic change.},
address = {New York, New York, USA},
author = {Pradal, Christophe and Fournier, Christian and Valduriez, Patrick and Cohen-Boulakia, Sarah},
booktitle = {Proc. 27th Int. Conf. Sci. Stat. Database Manag. - SSDBM '15},
doi = {10.1145/2791347.2791365},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Pradal et al. - 2015 - OpenAlea.pdf:pdf},
isbn = {9781450337090},
month = {jun},
pages = {1--6},
publisher = {ACM Press},
title = {{OpenAlea}},
url = {http://dl.acm.org/citation.cfm?doid=2791347.2791365},
year = {2015}
}
@article{Marshall-Colon2017,
abstract = {Multi-scale models can facilitate whole plant simulations by linking gene networks, protein synthesis, metabolic pathways, physiology, and growth. Whole plant models can be further integrated with ecosystem, weather, and climate models to predict how various interactions respond to environmental perturbations. These models have the potential to fill in missing mechanistic details and generate new hypotheses to prioritize directed engineering efforts. Outcomes will potentially accelerate improvement of crop yield, sustainability, and increase future food security. It is time for a paradigm shift in plant modeling, from largely isolated efforts to a connected community that takes advantage of advances in high performance computing and mechanistic understanding of plant processes. Tools for guiding future crop breeding and engineering, understanding the implications of discoveries at the molecular level for whole plant behavior, and improved prediction of plant and ecosystem responses to the environment are urgently needed. The purpose of this perspective is to introduce Crops in silico (cropsinsilico.org), an integrative and multi-scale modeling platform, as one solution that combines isolated modeling efforts toward the generation of virtual crops, which is open and accessible to the entire plant biology community. The major challenges involved both in the development and deployment of a shared, multi-scale modeling platform, which are summarized in this prospectus, were recently identified during the first Crops in silico Symposium and Workshop.},
author = {Marshall-Colon, Amy and Long, Stephen P. and Allen, Douglas K. and Allen, Gabrielle and Beard, Daniel A. and Benes, Bedrich and von Caemmerer, Susanne and Christensen, A. J. and Cox, Donna J. and Hart, John C. and Hirst, Peter M. and Kannan, Kavya and Katz, Daniel S. and Lynch, Jonathan P. and Millar, Andrew J. and Panneerselvam, Balaji and Price, Nathan D. and Prusinkiewicz, Przemyslaw and Raila, David and Shekar, Rachel G. and Shrivastava, Stuti and Shukla, Diwakar and Srinivasan, Venkatraman and Stitt, Mark and Turk, Matthew J. and Voit, Eberhard O. and Wang, Yu and Yin, Xinyou and Zhu, Xin-Guang},
doi = {10.3389/fpls.2017.00786},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Marshall-Colon et al. - 2017 - Crops In Silico Generating Virtual Crops Using an Integrative and Multi-scale Modeling Platform.pdf:pdf},
issn = {1664-462X},
journal = {Front. Plant Sci.},
keywords = {Computational framework,Model,Multiscale,crop yield,integration},
month = {may},
pages = {786},
publisher = {Frontiers},
title = {{Crops In Silico: Generating Virtual Crops Using an Integrative and Multi-scale Modeling Platform}},
url = {http://journal.frontiersin.org/article/10.3389/fpls.2017.00786/full},
volume = {8},
year = {2017}
}
@article{Godin1998,
abstract = {In applications dealing with plant growth modeling, increasing attention is being devoted to the topological structure of plants. Different models, based on tree-graphs, have been introduced to represent plants. These models assume that the scale of description is fixed. However, this hypothesis is too restrictive for new modeling applications that aim to tackle analysis or simulation of plant growth at different time and space scales. In order to make such multiscale descriptions available to computer applications, we have defined a general methodology for measuring and representing multiscale plant topological structures. This paper discusses the design of a model of plant topological structures and sketches out its general formal properties. The model supports multiscale, attributed and time-varying descriptions of plants. It is intended to be used for plant analysis methodologies and plant growth simulations.},
author = {Godin, C. and Caraglio, Y.},
doi = {10.1006/JTBI.1997.0561},
issn = {0022-5193},
journal = {J. Theor. Biol.},
month = {mar},
number = {1},
pages = {1--46},
publisher = {Academic Press},
title = {{A Multiscale Model of Plant Topological Structures}},
url = {https://www.sciencedirect.com/science/article/pii/S0022519397905610},
volume = {191},
year = {1998}
}
@article{Demir2010,
abstract = {Incompatible data storage formats have hindered the sharing and analyses of digital representations of biological pathways. BioPAX is a standardized language supported by {\textgreater}40 databases and software tools for exchanging pathway data.},
author = {Demir, Emek and Cary, Michael P and Paley, Suzanne and Fukuda, Ken and Lemer, Christian and Vastrik, Imre and Wu, Guanming and D'Eustachio, Peter and Schaefer, Carl and Luciano, Joanne and Schacherer, Frank and Martinez-Flores, Irma and Hu, Zhenjun and Jimenez-Jacinto, Veronica and Joshi-Tope, Geeta and Kandasamy, Kumaran and Lopez-Fuentes, Alejandra C and Mi, Huaiyu and Pichler, Elgar and Rodchenkov, Igor and Splendiani, Andrea and Tkachev, Sasha and Zucker, Jeremy and Gopinath, Gopal and Rajasimha, Harsha and Ramakrishnan, Ranjani and Shah, Imran and Syed, Mustafa and Anwar, Nadia and Babur, {\"{O}}zg{\"{u}}n and Blinov, Michael and Brauner, Erik and Corwin, Dan and Donaldson, Sylva and Gibbons, Frank and Goldberg, Robert and Hornbeck, Peter and Luna, Augustin and Murray-Rust, Peter and Neumann, Eric and Ruebenacker, Oliver and Samwald, Matthias and van Iersel, Martijn and Wimalaratne, Sarala and Allen, Keith and Braun, Burk and Whirl-Carrillo, Michelle and Cheung, Kei-Hoi and Dahlquist, Kam and Finney, Andrew and Gillespie, Marc and Glass, Elizabeth and Gong, Li and Haw, Robin and Honig, Michael and Hubaut, Olivier and Kane, David and Krupa, Shiva and Kutmon, Martina and Leonard, Julie and Marks, Debbie and Merberg, David and Petri, Victoria and Pico, Alex and Ravenscroft, Dean and Ren, Liya and Shah, Nigam and Sunshine, Margot and Tang, Rebecca and Whaley, Ryan and Letovksy, Stan and Buetow, Kenneth H and Rzhetsky, Andrey and Schachter, Vincent and Sobral, Bruno S and Dogrusoz, Ugur and McWeeney, Shannon and Aladjem, Mirit and Birney, Ewan and Collado-Vides, Julio and Goto, Susumu and Hucka, Michael and {Le Nov{\`{e}}re}, Nicolas and Maltsev, Natalia and Pandey, Akhilesh and Thomas, Paul and Wingender, Edgar and Karp, Peter D and Sander, Chris and Bader, Gary D},
doi = {10.1038/nbt.1666},
issn = {1087-0156},
journal = {Nat. Biotechnol.},
keywords = {Cell signalling,Databases},
month = {sep},
number = {9},
pages = {935--942},
publisher = {Nature Publishing Group},
title = {{The BioPAX community standard for pathway data sharing}},
url = {http://www.nature.com/articles/nbt.1666},
volume = {28},
year = {2010}
}
@article{Peterson2009,
author = {Peterson, Pearu},
doi = {10.1504/IJCSE.2009.029165},
issn = {1742-7185},
journal = {Int. J. Comput. Sci. Eng.},
number = {4},
pages = {296},
title = {{F2PY: a tool for connecting Fortran and Python programs}},
url = {http://www.inderscience.com/link.php?id=29165},
volume = {4},
year = {2009}
}
@misc{travisci,
title = {{Travis CI - Test and Deploy Your Code with Confidence}},
url = {https://travis-ci.org/},
urldate = {2018-09-30},
year = {2018}
}
@misc{appveyor,
title = {{AppVeyor: Continuous Integration solution for Windows and Linux}},
url = {https://www.appveyor.com/},
urldate = {2018-09-30},
year = {2018}
}
@misc{HoudiniFX,
author = {{Houdini FX}},
title = {{L-System geometry node}},
url = {http://www.sidefx.com/docs/houdini/nodes/sop/lsystem.html},
urldate = {2018-12-30},
year = {2018}
}
@article{YAN2004,
author = {Yan, H.-P. and Kang, Meng Zhen and de Reffye, Philippe and Dingkuhn, Michael},
doi = {10.1093/aob/mch078},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/YAN et al. - 2004 - A Dynamic, Architectural Plant Model Simulating Resource-dependent Growth.pdf:pdf},
issn = {0305-7364},
journal = {Ann. Bot.},
month = {mar},
number = {5},
pages = {591--602},
publisher = {Oxford University Press},
title = {{A Dynamic, Architectural Plant Model Simulating Resource-dependent Growth}},
url = {https://academic.oup.com/aob/article-lookup/doi/10.1093/aob/mch078},
volume = {93},
year = {2004}
}
@inproceedings{Gabriel2004,
abstract = {A large number of MPI implementations are currently available, each of which emphasize different aspects of high-performance computing or are intended to solve a specific research problem. The result is a myriad of incompatible MPI implementations, all of which require separate installation, and the combination of which present significant logistical challenges for end users. Building upon prior research, and influenced by experience gained from the code bases of the LAM/MPI, LA-MPI, and FT-MPI projects, Open MPI is an all-new, production-quality MPI-2 implementation that is fundamentally centered around component concepts. Open MPI provides a unique combination of novel features previously unavailable in an open-source, production-quality implementation of MPI. Its component architecture provides both a stable platform for third-party research as well as enabling the run-time composition of independent software add-ons. This paper presents a high-level overview the goals, design, and implementation of Open MPI.},
address = {Budapest, Hungary},
author = {Gabriel, Edgar and Fagg, Graham E. and Bosilca, George and Angskun, Thara and Dongarra, Jack J. and Squyres, Jeffrey M. and Sahay, Vishal and Kambadur, Prabhanjan and Barrett, Brian and Lumsdaine, Andrew and Castain, Ralph H. and Daniel, David J. and Graham, Richard L. and Woodall, Timothy S.},
booktitle = {Proceedings, 11th Eur. PVM/MPI Users' Gr. Meet.},
doi = {10.1007/978-3-540-30218-6_19},
pages = {97--104},
publisher = {Springer, Berlin, Heidelberg},
title = {{Open MPI: Goals, Concept, and Design of a Next Generation MPI Implementation}},
url = {http://link.springer.com/10.1007/978-3-540-30218-6{\_}19},
year = {2004}
}
@book{Hairer1993,
abstract = {Second revised edition. This book deals with methods for solving nonstiff ordinary differential equations. The first chapter describes the historical development of the classical theory from Newton, Leibniz, Euler, and Hamilton to limit cycles and strange attractors. In a second chapter a modern treatment of Runge-Kutta and extrapolation methods is given. Also included are continuous methods for dense output, parallel Runge-Kutta methods, special methods for Hamiltonian systems, second order differential equations and delay equations. The third chapter begins with the classical theory of multistep methods, and concludes with the theory of general linear methods. Many applications from physics, chemistry, biology, and astronomy together with computer programs and numerical comparisons are presented. The book will be immensely useful to graduate students and researchers in numerical analysis and scientific computing, and to scientists in the fields mentioned above. "This is the revised version of the first edition of Vol. I published in 1987. .Vols. I and II (SSCM 14) of Solving Ordinary Differential Equations together are the standard text on numerical methods for ODEs. ... This book is well written and is together with Vol. II, the most comprehensive modern text on numerical integration methods for ODEs. It may serve a a text book for graduate courses ... and also as a reference book for all those who have to solve ODE problems numerically." Zeitschrift fr Angewandte Mathematik und Physik. Classical Mathematical Theory -- Runge-Kutta and Extrapolation Methods -- Multistep Methods and General Linear Methods.},
author = {Hairer, E. (Ernst) and N{\o}rsett, S. P. (Syvert Paul) and Wanner, Gerhard},
isbn = {9783540788621},
pages = {528},
title = {{Solving ordinary differential equations. I, Nonstiff problems}},
year = {1993}
}
@article{HALL2013,
abstract = {A closed-form solution for steady-state coupled phloem/xylem flow is presented. This incorporates the basic M{\"{u}}nch flow model of phloem transport, the cohesion model of xylem flow, and local variation in the xylem water potential and lateral water flow along the transport pathway. Use of the Lambert-W function allows this solution to be obtained under much more general and realistic conditions than has previously been possible. Variation in phloem resistance (i.e. viscosity) with solute concentration, and deviations from the Van't Hoff expression for osmotic potential are included. It is shown that the model predictions match those of the equilibrium solution of a numerical time-dependent model based upon the same mechanistic assumptions. The effect of xylem flow upon phloem flow can readily be calculated, which has not been possible in any previous analytical model. It is also shown how this new analytical solution can handle multiple sources and sinks within a complex architecture, and can describe competition between sinks. The model provides new insights into M{\"{u}}nch flow by explicitly including interactions with xylem flow and water potential in the closed-form solution, and is expected to be useful as a component part of larger numerical models of entire plants.},
author = {Hall, A. J. and Minchin, P. E. H.},
doi = {10.1111/pce.12125},
issn = {01407791},
journal = {Plant. Cell Environ.},
keywords = {M{\"{u}}nch flow,phloem-xylem interactions,solute transport,water potential equilibrium},
month = {dec},
number = {12},
pages = {2150--2162},
pmid = {23617886},
title = {{A closed-form solution for steady-state coupled phloem/xylem flow using the Lambert-W function}},
url = {http://www.ncbi.nlm.nih.gov/pubmed/23617886 http://doi.wiley.com/10.1111/pce.12125},
volume = {36},
year = {2013}
}
@misc{Stinner2018,
author = {Stinner, Victor},
title = {{Python perf module}},
url = {https://perf.readthedocs.io/en/latest/},
urldate = {2018-09-30},
year = {2018}
}
@article{Postma2017,
author = {Postma, Johannes A. and Kuppe, Christian and Owen, Markus R. and Mellor, Nathan and Griffiths, Marcus and Bennett, Malcolm J. and Lynch, Jonathan P. and Watt, Michelle},
doi = {10.1111/nph.14641},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Postma et al. - 2017 - O pen S im R oot widening the scope and application of root architectural models.pdf:pdf},
issn = {0028646X},
journal = {New Phytol.},
keywords = {OpenSimRoot,functional,model‐driven phenotyping,plant nutrition,root architectural traits,root system architecture,simulation,structural plant model},
month = {aug},
number = {3},
pages = {1274--1286},
publisher = {John Wiley {\&} Sons, Ltd (10.1111)},
title = {{O pen S im R oot : widening the scope and application of root architectural models}},
url = {http://doi.wiley.com/10.1111/nph.14641},
volume = {215},
year = {2017}
}
@article{Behnel2011a,
author = {Behnel, Stefan and Bradshaw, Robert and Citro, Craig and Dalcin, Lisandro and Seljebotn, Dag Sverre and Smith, Kurt},
doi = {10.1109/MCSE.2010.118},
issn = {1521-9615},
journal = {Comput. Sci. Eng.},
keywords = {Cython,Python,numerics,scientific computing},
month = {mar},
number = {2},
pages = {31--39},
publisher = {IEEE Educational Activities Department},
title = {{Cython: The Best of Both Worlds}},
url = {http://ieeexplore.ieee.org/document/5582062/},
volume = {13},
year = {2011}
}
@article{Gropp1996,
abstract = {MPI (Message Passing Interface) is a specification for a standard library for message passing that was defined by the MPI Forum, a broadly based group of parallel computer vendors, library writers, and applications specialists. Multiple implementations of MPI have been developed. In this paper, we describe MPICH, unique among existing implementations in its design goal of combining portability with high performance. We document its portability and performance and describe the architecture by which these features are simultaneously achieved. We also discuss the set of tools that accompany the free distribution of MPICH, which constitute the beginnings of a portable parallel programming environment. A project of this scope inevitably imparts lessons about parallel computing, the specification being followed, the current hardware and software environment for parallel computing, and project management; we describe those we have learned. Finally, we discuss future developments for MPICH, including those necessary to accommodate extensions to the MPI Standard now being contemplated by the MPI Forum.},
author = {Gropp, William and Lusk, Ewing and Doss, Nathan and Skjellum, Anthony},
doi = {10.1016/0167-8191(96)00024-5},
issn = {0167-8191},
journal = {Parallel Comput.},
month = {sep},
number = {6},
pages = {789--828},
publisher = {North-Holland},
title = {{A high-performance, portable implementation of the MPI message passing interface standard}},
url = {https://www.sciencedirect.com/science/article/pii/0167819196000245},
volume = {22},
year = {1996}
}
@article{Goldbaum2018,
author = {Goldbaum, Nathan J and Zuhone, John A and Turk, Matthew J and Kowalik, Kacper and Rosen, Anna L},
doi = {10.21105/joss.00809},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Goldbaum et al. - Unknown - unyt Handle, manipulate, and convert data with units in Python Software • Review • Repository • Archiv.pdf:pdf},
journal = {J. Open Source Softw.},
number = {28},
pages = {809},
title = {{unyt: Handle, manipulate, and convert data with units in Python Software • Review • Repository • Archive}},
url = {https://doi.org/10.21105/joss.00809},
volume = {3},
year = {2018}
}
@inproceedings{Coakley2012,
abstract = {This paper describes the design of an agent-based modelling framework for high performance computing. Rather than a collection of methods that require parallel programming expertise the framework presented allows modellers to concentrate on the model while the framework handles the efficient execution of simulations. The framework uses a state machine based representation of agents that allows a statically calculated optimal ordering of agent execution and parallel communication routines. Some experiments with the current implementation and the results of using a simple communication dominant model for benchmarking performance are reported. The model with half a million agents is used to show that a parallel efficiency of above 80{\%} is achievable when distributed over 432 processors. Future improvements are discussed including data dependency analysis, vector operations over agents, and dynamic task scheduling.},
author = {Coakley, Simon and Gheorghe, Marian and Holcombe, Mike and Chin, Shawn and Worth, David and Greenough, Chris},
booktitle = {2012 IEEE 14th Int. Conf. High Perform. Comput. Commun. 2012 IEEE 9th Int. Conf. Embed. Softw. Syst.},
doi = {10.1109/HPCC.2012.79},
isbn = {978-1-4673-2164-8},
keywords = {Benchmark testing,Biological system modeling,Computational modeling,Fires,Memory management,Sociology,Synchronization,agent-based modelling,high performance computing},
month = {jun},
pages = {538--545},
publisher = {IEEE},
title = {{Exploitation of High Performance Computing in the FLAME Agent-Based Simulation Framework}},
url = {http://ieeexplore.ieee.org/document/6332218/},
year = {2012}
}
@article{integration_prep,
author = {Kannan, Kavya and Wang, Yu and Lang, Meagan and Challa, Ghana S. and Srinivasan, Venkat and Long, Stephen P. and Turk, Matthew J. and Marshall-Colon, Amy},
journal = {in prep.},
title = {{A multiscale model of soybean leaf predicts the photosynthetic response to future CO2 concentrations}},
year = {2018}
}
@article{Hucka2003,
author = {Hucka, M. and Finney, A. and Sauro, H. M. and Bolouri, H. and Doyle, J. C. and Kitano, H. and {and the rest of the SBML Forum:}, A. P. and Arkin, A. P. and Bornstein, B. J. and Bray, D. and Cornish-Bowden, A. and Cuellar, A. A. and Dronov, S. and Gilles, E. D. and Ginkel, M. and Gor, V. and Goryanin, I. I. and Hedley, W. J. and Hodgman, T. C. and Hofmeyr, J.-H. and Hunter, P. J. and Juty, N. S. and Kasberger, J. L. and Kremling, A. and Kummer, U. and {Le Novere}, N. and Loew, L. M. and Lucio, D. and Mendes, P. and Minch, E. and Mjolsness, E. D. and Nakayama, Y. and Nelson, M. R. and Nielsen, P. F. and Sakurada, T. and Schaff, J. C. and Shapiro, B. E. and Shimizu, T. S. and Spence, H. D. and Stelling, J. and Takahashi, K. and Tomita, M. and Wagner, J. and Wang, J.},
doi = {10.1093/bioinformatics/btg015},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Hucka et al. - 2003 - The systems biology markup language (SBML) a medium for representation and exchange of biochemical network models.pdf:pdf},
issn = {1367-4803},
journal = {Bioinformatics},
month = {mar},
number = {4},
pages = {524--531},
publisher = {Oxford University Press},
title = {{The systems biology markup language (SBML): a medium for representation and exchange of biochemical network models}},
url = {https://academic.oup.com/bioinformatics/article-lookup/doi/10.1093/bioinformatics/btg015},
volume = {19},
year = {2003}
}
@article{Humphries1995,
author = {Humphries, S.W. and Long, S.P.},
doi = {10.1093/bioinformatics/11.4.361},
issn = {1367-4803},
journal = {Bioinformatics},
month = {aug},
number = {4},
pages = {361--371},
publisher = {Oxford University Press},
title = {{WIMOVAC: a software package for modelling the dynamics of plant leaf and canopy photosynthesis}},
url = {https://academic.oup.com/bioinformatics/article-lookup/doi/10.1093/bioinformatics/11.4.361},
volume = {11},
year = {1995}
}
@article{Cuellar2003,
abstract = {CellML is an XML-based exchange format developed by the University of Auckland in collaboration with Physiome Sciences, Inc. CellML 1.1 has a component-based architecture allowing a modeller to build complex systems of models that expand and reuse previously published models. CellML Metadata is a format for encoding contextual information for a model. CellML 1.1 can be used in conjunction with CellML Metadata to provide a complete description of the structure and underlying mathematics of biological models. A repository of over 200 electrophysiological, mechanical, signal transduction, and metabolic pathway models is available at www.cellml.org.},
author = {Cuellar, Autumn A. and Lloyd, Catherine M. and Nielsen, Poul F. and Bullivant, David P. and Nickerson, David P. and Hunter, Peter J.},
doi = {10.1177/0037549703040939},
issn = {0037-5497},
journal = {Simulation},
keywords = {Biological model,XML,markup language,mathematical model},
month = {dec},
number = {12},
pages = {740--747},
publisher = {SAGE Publications},
title = {{An Overview of CellML 1.1, a Biological Model Description Language}},
url = {http://journals.sagepub.com/doi/10.1177/0037549703040939},
volume = {79},
year = {2003}
}
@misc{GEO2017,
author = {GEO},
title = {{MINiML - GEO - NCBI}},
url = {https://www.ncbi.nlm.nih.gov/geo/info/MINiML.html},
urldate = {2018-12-30},
year = {2017}
}
@inproceedings{Jupyter2018,
author = {Jupyter, Project and Bussonnier, Matthias and Forde, Jessica and Freeman, Jeremy and Granger, Brian and Head, Tim and Holdgraf, Chris and Kelley, Kyle and Nalvarte, Gladys and Osheroff, Andrew and Pacer, M and Panda, Yuvi and Perez, Fernando and Ragan-Kelley, Benjamin and Willing, Carol},
booktitle = {Proc. 17th Python Sci. Conf.},
doi = {10.25080/Majora-4af1f417-011},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Jupyter et al. - 2018 - Binder 2.0 - Reproducible, interactive, sharable environments for science at scale.pdf:pdf},
pages = {113--120},
title = {{Binder 2.0 - Reproducible, interactive, sharable environments for science at scale}},
url = {https://conference.scipy.org/proceedings/scipy2018/project{\_}jupyter.html},
year = {2018}
}
@article{Bernacchi2005,
abstract = {Down-regulation of light-saturated photosynthesis (A(sat)) at elevated atmospheric CO(2) concentration, [CO(2)], has been demonstrated for many C(3) species and is often associated with inability to utilize additional photosynthate and/or nitrogen limitation. In soybean, a nitrogen-fixing species, both limitations are less likely than in crops lacking an N-fixing symbiont. Prior studies have used controlled environment or field enclosures where the artificial environment can modify responses to [CO(2)]. A soybean free air [CO(2)] enrichment (FACE) facility has provided the first opportunity to analyze the effects of elevated [CO(2)] on photosynthesis under fully open-air conditions. Potential ribulose-1,5-bisphosphate carboxylase/oxygenase (Rubisco) carboxylation (V(c,max)) and electron transport through photosystem II (J(max)) were determined from the responses of A(sat) to intercellular [CO(2)] (C(i)) throughout two growing seasons. Mesophyll conductance to CO(2) (g(m)) was determined from the responses of A(sat) and whole chain electron transport (J) to light. Elevated [CO(2)] increased A(sat) by 15-20{\%} even though there was a small, statistically significant, decrease in V(c,max). This differs from previous studies in that V(c,max)/J(max) decreased, inferring a shift in resource investment away from Rubisco. This raised the C(i) at which the transition from Rubisco-limited to ribulose-1,5-bisphosphate regeneration-limited photosynthesis occurred. The decrease in V(c,max) was not the result of a change in g(m), which was unchanged by elevated [CO(2)]. This first analysis of limitations to soybean photosynthesis under fully open-air conditions reveals important differences to prior studies that have used enclosures to elevate [CO(2)], most significantly a smaller response of A(sat) and an apparent shift in resources away from Rubisco relative to capacity for electron transport.},
author = {Bernacchi, Carl J. and Morgan, Patrick B. and Ort, Donald R. and Long, Stephen P.},
doi = {10.1007/s00425-004-1320-8},
issn = {0032-0935},
journal = {Planta},
month = {jan},
number = {3},
pages = {434--446},
pmid = {15252734},
title = {{The growth of soybean under free air [CO2] enrichment (FACE) stimulates photosynthesis while decreasing in vivo Rubisco capacity}},
url = {http://www.ncbi.nlm.nih.gov/pubmed/15252734 http://link.springer.com/10.1007/s00425-004-1320-8},
volume = {220},
year = {2005}
}
@article{SWEETLOVE2013,
abstract = {Respiration is a major contributor to net exchange of CO₂ between plants and the atmosphere and thus an important aspect of the vegetation component of global climate change models. However, a mechanistic model of respiration is lacking, and so here we explore the potential for flux balance analysis (FBA) to predict cellular CO₂ evolution rates. Metabolic flux analysis reveals that respiration is not always the dominant source of CO₂, and that metabolic processes such as the oxidative pentose phosphate pathway (OPPP) and lipid synthesis can be quantitatively important. Moreover, there is considerable variation in the metabolic origin of evolved CO₂ between tissues, species and conditions. Comparison of FBA-predicted CO₂ evolution profiles with those determined from flux measurements reveals that FBA is able to predict the metabolic origin of evolved CO₂ in different tissues/species and under different conditions. However, FBA is poor at predicting flux through certain metabolic processes such as the OPPP and we identify the way in which maintenance costs are accounted for as a major area of improvement for future FBA studies. We conclude that FBA, in its standard form, can be used to predict CO₂ evolution in a range of plant tissues and in response to environment.},
author = {Sweetlove, Lee J. and Williams, Thomas C. R. and Cheung, C. Y. Maurice and Ratcliffe, R. George},
doi = {10.1111/pce.12105},
issn = {01407791},
journal = {Plant. Cell Environ.},
keywords = {climate change,flux balance analysis,metabolic flux analysis,plant.},
month = {sep},
number = {9},
pages = {1631--1640},
pmid = {23531106},
title = {{Modelling metabolic CO 2 evolution - a fresh perspective on respiration}},
url = {http://www.ncbi.nlm.nih.gov/pubmed/23531106 http://doi.wiley.com/10.1111/pce.12105},
volume = {36},
year = {2013}
}
@book{Rusling1999,
author = {Rusling, David A.},
chapter = {5},
edition = {0.8-3},
title = {{The Linux Kernel}},
url = {https://www.tldp.org/LDP/tlk/tlk.html},
year = {1999}
}
@article{Merks2011,
abstract = {Plant organs, including leaves and roots, develop by means of a multilevel cross talk between gene regulation, patterned cell division and cell expansion, and tissue mechanics. The multilevel regulatory mechanisms complicate classic molecular genetics or functional genomics approaches to biological development, because these methodologies implicitly assume a direct relation between genes and traits at the level of the whole plant or organ. Instead, understanding gene function requires insight into the roles of gene products in regulatory networks, the conditions of gene expression, etc. This interplay is impossible to understand intuitively. Mathematical and computer modeling allows researchers to design new hypotheses and produce experimentally testable insights. However, the required mathematics and programming experience makes modeling poorly accessible to experimental biologists. Problem-solving environments provide biologically intuitive in silico objects ("cells", "regulation networks") required for setting up a simulation and present those to the user in terms of familiar, biological terminology. Here, we introduce the cell-based computer modeling framework VirtualLeaf for plant tissue morphogenesis. The current version defines a set of biologically intuitive C++ objects, including cells, cell walls, and diffusing and reacting chemicals, that provide useful abstractions for building biological simulations of developmental processes. We present a step-by-step introduction to building models with VirtualLeaf, providing basic example models of leaf venation and meristem development. VirtualLeaf-based models provide a means for plant researchers to analyze the function of developmental genes in the context of the biophysics of growth and patterning. VirtualLeaf is an ongoing open-source software project (http://virtualleaf.googlecode.com) that runs on Windows, Mac, and Linux.},
author = {Merks, Roeland M H and Guravage, Michael and Inz{\'{e}}, Dirk and Beemster, Gerrit T S},
doi = {10.1104/pp.110.167619},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Merks et al. - 2011 - VirtualLeaf an open-source framework for cell-based modeling of plant tissue growth and development.pdf:pdf},
issn = {1532-2548},
journal = {Plant Physiol.},
month = {feb},
number = {2},
pages = {656--66},
pmid = {21148415},
publisher = {American Society of Plant Biologists},
title = {{VirtualLeaf: an open-source framework for cell-based modeling of plant tissue growth and development.}},
url = {http://www.ncbi.nlm.nih.gov/pubmed/21148415 http://www.pubmedcentral.nih.gov/articlerender.fcgi?artid=PMC3032457},
volume = {155},
year = {2011}
}
@book{Eaton2002,
author = {Eaton, John W.},
isbn = {0-9541617-2-6},
publisher = {Network Theory Limited},
title = {{GNU Octave Manual}},
year = {2002}
}
@misc{ZMQ,
publisher = {iMatix Corporation},
title = {{ZeroMQ}},
url = {http://zeromq.org/},
year = {2007}
}
@misc{jsonschema,
title = {{JSON Schema | The home of JSON Schema}},
url = {https://json-schema.org/},
urldate = {2018-09-30},
year = {2018}
}
@inproceedings{Kluyver2016,
author = {Kluyver, Thomas and Ragan-Kelley, Benjamin and P{\'{e}}rez, Fernando and Granger, Brian and Bussonnier, Matthias and Frederic, Jonathan and Kelley, Kyle and Hamrick, Jessica and Grout, Jason and Corlay, Sylvain and Ivanov, Paul and Avila, Dami{\'{a}}n and Abdalla, Safia and Willing, Carol and {Jupyter Development Team}},
booktitle = {Position. Power Acad. Publ. Play. Agents Agendas},
doi = {10.3233/978-1-61499-649-1-87},
pages = {87--90},
title = {{Jupyter Notebooks – a publishing format for reproducible computational workflows}},
url = {http://ebooks.iospress.nl/publication/42900},
year = {2016}
}
@misc{Jones2001,
author = {Jones, Eric and Oliphant, Travis and Peterson, Pearu},
title = {{SciPy: Open source scientific tools for Python}},
url = {http://www.scipy.org/},
urldate = {2018-01-31},
year = {2001}
}
@article{Lang2018,
author = {Lang, Meagan},
journal = {in Silico Plants},
title = {{cis{\_}interface: A Python Package for Integrating Computational Models Across Languages and Scales}},
volume = {submitted},
year = {2018}
}
@techreport{ply,
author = {Turk, Greg},
institution = {The Board of Trustees of The Leland Stanford Junior University},
title = {{The PLY Polygon File Format}},
url = {https://web.archive.org/web/20161204152348/http://www.dcs.ed.ac.uk/teaching/cs4/www/graphics/Web/ply.html},
year = {1994}
}
@article{WALL1994,
author = {Wall, G. and Amthor, J. and Kimball, B.},
doi = {10.1016/0168-1923(94)90064-7},
issn = {01681923},
journal = {Agric. For. Meteorol.},
month = {sep},
number = {1-4},
pages = {289--342},
title = {{COTCO2: a cotton growth simulation model for global change☆}},
url = {http://linkinghub.elsevier.com/retrieve/pii/0168192394900647},
volume = {70},
year = {1994}
}
@article{Boudon2012,
abstract = {The study of plant development requires increasingly powerful modeling tools to help understand and simulate the growth and functioning of plants. In the last decade, the formalism of L-systems has emerged as a major paradigm for modeling plant development. Previous implementations of this formalism were made based on static languages, i.e., languages that require explicit definition of variable types before using them. These languages are often efficient but involve quite a lot of syntactic overhead, thus restricting the flexibility of use for modelers. In this work, we present an adaptation of L-systems to the Python language, a popular and powerful open-license dynamic language. We show that the use of dynamic language properties makes it possible to enhance the development of plant growth models: (i) by keeping a simple syntax while allowing for high-level programming constructs, (ii) by making code execution easy and avoiding compilation overhead, (iii) by allowing a high-level of model reusability and the building of complex modular models, and (iv) by providing powerful solutions to integrate MTG data-structures (that are a common way to represent plants at several scales) into L-systems and thus enabling to use a wide spectrum of computer tools based on MTGs developed for plant architecture. We then illustrate the use of L-Py in real applications to build complex models or to teach plant modeling in the classroom.},
author = {Boudon, Fr{\'{e}}d{\'{e}}ric and Pradal, Christophe and Cokelaer, Thomas and Prusinkiewicz, Przemyslaw and Godin, Christophe},
doi = {10.3389/fpls.2012.00076},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Boudon et al. - 2012 - L-py an L-system simulation framework for modeling plant architecture development based on a dynamic language.pdf:pdf},
issn = {1664-462X},
journal = {Front. Plant Sci.},
keywords = {FSPM,L-system,MTG,Python language,development,environment,plant modeling},
pages = {76},
pmid = {22670147},
publisher = {Frontiers Media SA},
title = {{L-py: an L-system simulation framework for modeling plant architecture development based on a dynamic language.}},
url = {http://www.ncbi.nlm.nih.gov/pubmed/22670147 http://www.pubmedcentral.nih.gov/articlerender.fcgi?artid=PMC3362793},
volume = {3},
year = {2012}
}
@misc{jsyaml,
title = {{JS-YAML - YAML 1.2 parser / writer for JavaScript}},
url = {https://github.com/nodeca/js-yaml},
urldate = {2018-10-12},
year = {2011}
}
@book{Akgul2013,
abstract = {Title from PDF title page (viewed Apr. 26, 2013).},
author = {Akgul, Faruk.},
isbn = {178216104X},
publisher = {Packt Publishing},
title = {{ZeroMQ : use ZeroMQ and learn how to apply different message patterns}},
url = {https://dl.acm.org/citation.cfm?id=2523409},
year = {2013}
}
@misc{pyyaml,
title = {{PyYAML}},
url = {https://pyyaml.org/},
urldate = {2018-10-12},
year = {2006}
}
@book{Stallman2004,
abstract = {"June 2004." Includes indexes.},
author = {Stallman, Richard. and McGrath, Roland. and Smith, Paul D.},
isbn = {1882114833},
pages = {184},
publisher = {GNU Press},
title = {{GNU make : a program for directed recompilation : GNU make version 3.81}},
url = {https://dl.acm.org/citation.cfm?id=1205748},
year = {2004}
}
@misc{Simonov2006,
author = {Simonov, Kirill},
title = {{LibYAML - A YAML parser and emitter library.}},
url = {https://pyyaml.org/wiki/LibYAML},
urldate = {2018-10-12},
year = {2006}
}
@misc{make,
publisher = {Free Software Foundation},
title = {{GNU Make}},
url = {https://www.gnu.org/software/make/},
year = {2001}
}
@misc{cmake,
publisher = {Kitware},
title = {{CMake}},
url = {https://cmake.org/},
year = {2003}
}
@book{Martin2006,
author = {Martin, K. and Hoffman, B.},
edition = {3rd},
publisher = {Kitware},
title = {{Mastering CMake: A Cross-Platform Build System}},
year = {2006}
}
@techreport{obj,
abstract = {Object files define the geometry and other properties for objects in Wavefront's Advanced Visualizer. Object files can also be used to transfer geometric data back and forth between the Advanced Visualizer and other applications. Object files can be in ASCII format (.obj) or binary format (.mod). This appendix describes the ASCII format for object files. These files must have the extension .obj. In this release, the .obj file format supports both polygonal objects and free-form objects. Polygonal geometry uses points, lines, and faces to define objects while free-form geometry uses curves and surfaces.},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Unknown - Unknown - B1. Object Files (.obj).pdf:pdf},
title = {{B1. Object Files (.obj)}},
url = {http://www.cs.utah.edu/{~}boulos/cs3505/obj{\_}spec.pdf},
year = {1994}
}
@misc{pandas,
title = {{pandas: Python Data Analysis Library}},
url = {https://pandas.pydata.org/},
urldate = {2018-10-12},
year = {2008}
}
@article{Wang2014,
abstract = {C4 photosynthesis has higher light, nitrogen, and water use efficiencies than C3 photosynthesis. Although the basic anatomical, cellular, and biochemical features of C4 photosynthesis are well understood, the quantitative significance of each element of C4 photosynthesis to the high photosynthetic efficiency are not well defined. Here, we addressed this question by developing and using a systems model of C4 photosynthesis, which includes not only the Calvin-Benson cycle, starch synthesis, sucrose synthesis, C4 shuttle, and CO2 leakage, but also photorespiration and metabolite transport between the bundle sheath cells and mesophyll cells. The model effectively simulated the CO2 uptake rates, and the changes of metabolite concentrations under varied CO2 and light levels. Analyses show that triose phosphate transport and CO2 leakage can help maintain a high photosynthetic rate by balancing ATP and NADPH amounts in bundle sheath cells and mesophyll cells. Finally, we used the model to define the optimal enzyme properties and a blueprint for C4 engineering. As such, this model provides a theoretical framework for guiding C4 engineering and studying C4 photosynthesis in general.

*   {\#}{\#}{\#} Glossary
    
    BSC
    :   bundle sheath cell
    MC
    :   mesophyll cell
    PPDK
    :   pyruvate orthophosphate dikinase
    NADP-MDH
    :   NADP-malate dehydrogenase
    PEPC
    :   phosphoenolpyruvate carboxylase
    NADP-ME
    :   NADP-malate enzyme
    PGA
    :   3-phosphoglycerate
    T3P
    :   triose phosphate
    CA
    :   carbonic anhydrase
    RuBP
    :   ribulose 1,5-bisphosphate
    TPT
    :   triose phosphate transporter
    PPFD
    :   photosynthetic photon flux density
    MDH
    :   malate dehydrogenase},
author = {Wang, Yu and Long, Stephen P. and Zhu, Xin-Guang},
doi = {10.1104/PP.113.230284},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Wang, Long, Zhu - 2014 - Elements Required for an Efficient NADP-Malic Enzyme Type C4 Photosynthesis.pdf:pdf},
issn = {0032-0889},
journal = {Plant Physiol.},
month = {apr},
number = {4},
pages = {2231--2246},
pmid = {24521879},
publisher = {American Society of Plant Biologists},
title = {{Elements Required for an Efficient NADP-Malic Enzyme Type C4 Photosynthesis}},
url = {http://www.plantphysiol.org/content/164/4/2231},
volume = {164},
year = {2014}
}
@book{Goudriaan1994,
address = {Dordrecht},
author = {Goudriaan, J and Laar, HH Van},
pages = {238},
publisher = {Kluwer Academic Publishers},
title = {{Modelling potential crop growth processes}},
url = {https://books.google.com/books?hl=en{\&}lr={\&}id=3FPtCAAAQBAJ{\&}oi=fnd{\&}pg=PR11{\&}ots=yqbvRQTWkR{\&}sig=YQhkhfBez22PTxFLJohBTAaraE0},
year = {1994}
}
@article{Barczi2007,
author = {Barczi, J.-F. and Rey, H. and Caraglio, Y. and de Reffye, P. and Barthelemy, D. and Dong, Q. X. and Fourcaud, T.},
doi = {10.1093/aob/mcm194},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Barczi et al. - 2007 - AmapSim A Structural Whole-plant Simulator Based on Botanical Knowledge and Designed to Host External Functional.pdf:pdf},
issn = {0305-7364},
journal = {Ann. Bot.},
month = {aug},
number = {8},
pages = {1125--1138},
publisher = {Oxford University Press},
title = {{AmapSim: A Structural Whole-plant Simulator Based on Botanical Knowledge and Designed to Host External Functional Models}},
url = {https://academic.oup.com/aob/article-lookup/doi/10.1093/aob/mcm194},
volume = {101},
year = {2007}
}
@article{Beazley2003,
author = {Beazley, D.M.},
doi = {10.1016/S0167-739X(02)00171-1},
issn = {0167739X},
journal = {Futur. Gener. Comput. Syst.},
month = {jul},
number = {5},
pages = {599--609},
title = {{Automated scientific software scripting with SWIG}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S0167739X02001711},
volume = {19},
year = {2003}
}
@inproceedings{babuji18,
author = {Babuji, Yadu and Chard, Kyle and Foster, Ian and Katz, Daniel S. and Wilde, Michael and Woodard, Anna and Wozniak, Justin},
booktitle = {10th Int. Work. Sci. Gateways},
title = {{Parsl: Scalable Parallel Scripting in Python}},
year = {2018}
}
@article{Magoules2018,
abstract = {In this paper, we address the design of a communication library which particularly targets distributed iterative computing, including randomly executed asynchronous iterations. The well-known MPI programming framework is considered, upon which unique generic routines are proposed for both blocking and non-blocking communication modes. This allows for developing unique software applications to experiment both classical and asynchronous iterative methods through the same programming pattern. Convergence detection issues are investigated on pure algorithmic aspects, from which we provide an efficient exact approach to compute global convergence residual norms, by means of non-blocking synchronization. Point-to-point message reception and sending requests are carefully handled in view of producing the least possible delays about transmitted iterative data. Extensive experiments with an existing MPI-based scientific application validate both the proposed MPI-like programming framework and design options to achieve best performances of asynchronous iterative computing.},
author = {Magoul{\`{e}}s, Fr{\'{e}}d{\'{e}}ric and Gbikpi-Benissan, Guillaume},
doi = {10.1016/J.ADVENGSOFT.2018.01.009},
file = {:Users/langmm/Library/Application Support/Mendeley Desktop/Downloaded/Magoul{\`{e}}s, Gbikpi-Benissan - 2018 - JACK2 An MPI-based communication library with non-blocking synchronization for asynchronous iteratio.pdf:pdf},
issn = {0965-9978},
journal = {Adv. Eng. Softw.},
month = {may},
pages = {116--133},
publisher = {Elsevier},
title = {{JACK2: An MPI-based communication library with non-blocking synchronization for asynchronous iterations}},
url = {https://www.sciencedirect.com/science/article/pii/S0965997817308827},
volume = {119},
year = {2018}
}
